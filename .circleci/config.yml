version: 2.1

### References ###
#-------------------------------------------------
# Section defines system executors and associated
# variables used in the configuration.
#-------------------------------------------------
references:
  # Path to the base working directory.
  # The path is a global variable usually implemented within
  # the executors.
  working_directory: &working_directory
    ~/project

  # Path to the base workspace directory.
  # The path is the base for file persistence operations
  # between operational steps.
  workspace_root: &workspace_root
    /tmp/workspace

  # Structural alias that attaches a workspace into the executor.
  # It is used as one of the steps within a job.
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

### Executors ###
#-------------------------------------------------
# Section defines system executors and associated
# variables used in the configuration.
#-------------------------------------------------
executors:
  php-base-executor:
    docker:
      - image: circleci/php:7.3.6-cli-stretch
        user: root
    working_directory: *working_directory

  php-executor:
    docker:
      - image: circleci/php:7.3.6-cli-stretch
        user: root
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: root
          MYSQL_DB: lumen-dream-net
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_PASSWORD: secret
      - image: circleci/redis:5.0.5-alpine
    working_directory: *working_directory

### Commands ###
#-------------------------------------------------
# Section defines reusable commands available
# within the flow.
#-------------------------------------------------
commands:
  php-exec-libs-install:
    description: "Install additional php executor libs. !To be moved to dedicated docker build!"
    steps:
      - run:
          name: Update apt-get
          command: sudo apt-get update

      - run:
          name: Add required php libs
          command: |
            sudo pecl channel-update pecl.php.net
            sudo pecl install -f igbinary
            sudo docker-php-ext-enable igbinary
            sudo docker-php-ext-install bcmath
            sudo apt-get install default-mysql-client
            printf "yes\n" | sudo pecl install -f redis
            sudo docker-php-ext-enable redis

### Jobs ###
#-------------------------------------------------
# Section defines individual jobs.
#-------------------------------------------------
jobs:
  base:
    executor: php-executor
    steps:
      - checkout

      - php-exec-libs-install

      - run: sudo apt update
      
      - run: sudo docker-php-ext-install zip

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}

      - run: composer install -n --no-progress --no-suggest --prefer-dist --profile

      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      - run:
          name: Wait for redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m

      - run:
          name: Wait for MySQL
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1

      # prepare the database
      - run:
          name: Setup Environment
          command: |
            cp .env.example .env
            sed -i 's/.*DB_HOST=.*/DB_HOST=127.0.0.1/g' .env
            sed -i 's/.*DB_DATABASE=.*/DB_DATABASE=lumen-dream-net/g' .env
            sed -i 's/.*DB_USERNAME=.*/DB_USERNAME=root/g' .env
            sed -i 's/.*DB_PASSWORD=.*/DB_PASSWORD=secret/g' .env

      - run:
          name: Run Database migration
          command: php artisan migrate

      - run:
          name: Seed db
          command: php artisan db:seed

      - run:
          name: Project testing
          command: |
            ./cc-test-reporter before-build
            composer unit
            cp tests/_reports/coverage/clover.xml .
            ./cc-test-reporter after-build --coverage-input-type clover --exit-code $?
      
### Workflows ###
#-------------------------------------------------
# Section defines individual workflows.
#-------------------------------------------------
workflows:
    version: 2.1

    default:
      jobs:
        - base